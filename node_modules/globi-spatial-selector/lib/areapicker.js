var infobox = require('./infobox.js');
var boundsToBBox = require('./boundsToBBox.js');

module.exports = AreaPicker;

function AreaPicker(map, google) {
    var testCoords = { "nw_lat": 41.574361, "nw_lng": -125.533448, "se_lat": 32.750323, "se_lng": -114.744873 };

    this.bounds_ = new google.maps.LatLngBounds(
        new google.maps.LatLng(testCoords.se_lat, testCoords.nw_lng), // California
        new google.maps.LatLng(testCoords.nw_lat, testCoords.se_lng)
    );

    this.rectangle_ = null;
    this.map = map;
    this.isCreated_ = false;
    this.google = google;

    this.control_ = new AreaPickerControl(this, google);
    this.info_ = new AreaPickerInfo(this, google);
}

AreaPicker.prototype.create = function () {
    var me = this;
    if (!me.isCreated_) {
        me.rectangle_ = new me.google.maps.Rectangle({
            bounds: me.bounds_,
            editable: true,
            draggable: true,
            zIndex: 10
        });

        me.google.maps.event.addListener(me.rectangle_, 'bounds_changed', function () {
            me.bounds_ = me.rectangle_.getBounds();

            me.info_.show(me.bounds_);
        });

        me.isCreated_ = true;
    }
};

AreaPicker.prototype.show = function () {
    if (!this.isCreated_) {
        this.create(this.google);
    }
    this.rectangle_.setMap(this.map);
    this.info_.show(this.bounds_);
};

AreaPicker.prototype.hide = function () {
    if (this.isCreated_) {
        this.rectangle_.setMap(null);
        this.info_.hide();
    }
};

AreaPicker.prototype.setBounds = function (bounds) {
    this.bounds_ = bounds;
    return this;
};


function AreaPickerControl(associatedPicker, google) {
    this.associatedPicker_ = associatedPicker;
    this.isActive_ = false;
    this.container_ = null;
    this.google = google;
    this.create();

}

AreaPickerControl.prototype.create = function () {
    var me = this;
    me.container_ = document.createElement('div');
    me.container_.title = 'Toggle Area Picker';
    me.container_.index = 1;

    me.applyStyles();

    this.google.maps.event.addDomListener(me.container_, 'click', function (event) {
        me.isActive_ = !me.isActive_;
        if (me.isActive_) {
            me.container_.style.backgroundColor = '#f7f7f7';
            me.container_.innerHTML = 'Hide Area Picker';
            me.associatedPicker_.show(me.google);
        }
        else {
            me.container_.style.backgroundColor = '#fff';
            me.container_.innerHTML = 'Show Area Picker';
            me.associatedPicker_.hide();
        }
    });

    this.associatedPicker_.map.controls[ this.google.maps.ControlPosition.TOP_CENTER ].push(me.container_);
};

AreaPickerControl.prototype.applyStyles = function () {
    this.container_.style.margin = '5px';
    this.container_.style.paddingLeft = '5px';
    this.container_.style.paddingRight = '5px';
    this.container_.style.paddingTop = '1px';
    this.container_.style.paddingBottom = '1px';
    this.container_.style.backgroundColor = '#fff';
    this.container_.style.border = '1px solid rgba(0, 0, 0, 0.14902)';
    this.container_.style.width = '90px';
    this.container_.style.textAlign = 'center';
    this.container_.style.boxShadow = 'rgba(0, 0, 0, 0.298039) 0px 1px 4px -1px';
    this.container_.style.cursor = 'pointer';
    this.container_.innerHTML = 'Show Area Picker';
};

AreaPickerControl.prototype.setActive = function () {
    var me = this;
    me.isActive_ = true;
    me.container_.style.backgroundColor = '#f7f7f7';
    me.container_.innerHTML = 'Hide Area Picker';
};

function AreaPickerInfo(associatedPicker, google) {
    this.infoWindow = null;
    this.associatedPicker_ = associatedPicker;
    this.google = google;
    this.create();
}

AreaPickerInfo.prototype.create = function () {
    this.infoWindow = new this.google.maps.InfoWindow({ content: '', maxWidth: 200});
};

AreaPickerInfo.prototype.show = function (bounds) {
    this.hide();
    this.setContent(bounds);
    this.infoWindow.setPosition(bounds.getCenter());
    this.infoWindow.open(this.associatedPicker_.map);
};

AreaPickerInfo.prototype.hide = function () {
    this.infoWindow.close();
};

AreaPickerInfo.prototype.setContent = function (bounds) {
    var contentString = this.createContent_(bounds);
    this.infoWindow.setContent(contentString);
};

AreaPickerInfo.prototype.createContent_ = function (bounds) {
    return infobox.areaInfoBox(boundsToBBox(bounds));
};